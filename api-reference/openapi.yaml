openapi: 3.0.0
info:
  title: wato-external
  description: >-
    [Wato.ai](https://wato.ai) is a zero-cost messaging platform focused on
    WhatsApp groups and community retargeting. It allows for the management and
    growth of WhatsApp channels, aiming to save companies their WhatsApp
    marketing costs by ensuring 100% message delivery at no cost. The platform
    highlights its effectiveness in delivering messages compared to other
    channels like SMS, emails, and mobile app notifications, offering insights
    and analytics to elevate decision-making processes and strategies for growth
  version: 1.0.0
servers:
  - url: http://{{base_url}}
paths:
  /api/v1/user/authorize_user:
    post:
      tags:
        - default
      summary: authorize_user
      description: |-
        This is request to authorize existing user to use dashboard

        | **field_name** | **data_type** | **comment** |
        | --- | --- | --- |
        | user_name | string |  |
        | password | string |  |
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                password: <Your-password>
                user_name: test
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: number
                example: nginx/1.22.1
            Date:
              schema:
                type: string
                example: Mon, 04 Mar 2024 10:10:13 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '672'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"2a0-XR1R1sVvVDwM9f+wL4V6vN+9lb8"
          content:
            application/json:
              schema:
                type: object
              example:
                error: false
                status: success
                code: 200
                data:
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJlbWFpbCI6ImdhdXJhdkBqeW90aXN5YS5haSIsInVzZXJfbmFtZSI6ImhnbGkiLCJwaG9uZV9udW1iZXIiOiI5MTgzNDA1NjIwMzYiLCJmaXJzdF9uYW1lIjoiR2F1cmF2IiwibGFzdF9uYW1lIjoiS3VtYXIiLCJ3aGFyc2FwcF9udW1iZXIiOiI5MTc2NzY1ODQ2MDIiLCJpc19maXJzdF9sb2dpbiI6ZmFsc2UsImlhdCI6MTcwOTU0NzAxMywiZXhwIjoxNzI1MDk5MDEzLCJpc3MiOiJhcGkud2F0by5haSJ9.o_W-5oMzZMbESnhWfOeSYJ2iFjCWZv8G47spseqgLnE
                  user_info:
                    user_id: 1
                    email: gaurav@jyotisya.ai
                    user_name: hgli
                    phone_number: '918340562036'
                    first_name: Gaurav
                    last_name: Kumar
                    wharsapp_number: '917676584602'
                    is_first_login: false
  /api/v1/user/create_user:
    post:
      tags:
        - default
      summary: create_user
      description: >-
        This api is used to create new user on our platform. Using this we can
        get a new user signed up
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                first_name: <First Name>
                last_name: <Last Name>
                user_name: <User Name>
                email: <Email Id>
                phone_number: <Phone Number>
                whatsapp_number: <Phone Number>
                password: <Password>
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/venom/create-channel:
    post:
      tags:
        - default
      summary: create-channel
      description: >-
        Api to create new channels.


        | **field name** | **data type** | **comment** |

        | --- | --- | --- |

        | name | string |  |

        | description | string |  |

        | image | string | image in base64 format. Dont remove the mimetype
        information |
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: as-5.0
                description: as-5.0
                image: base-64 image
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{token}}
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: number
                example: nginx/1.22.1
            Date:
              schema:
                type: string
                example: Mon, 04 Mar 2024 10:11:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '278'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"116-X8xSUQ9vVa4l2VfCVRsmCWbiuGk"
          content:
            application/json:
              schema:
                type: object
              example:
                error: false
                status: success
                code: 200
                data:
                  resp:
                    title: as-5.0
                    nid:
                      server: newsletter
                      user: '120363253427223495'
                      _serialized: 120363253427223495@newsletter
                    inviteLink: https://whatsapp.com/channel/0029VaNhf1EElagzZu4tme45
                    createdAtTs: 1709547095
  /api/v1/venom/get-status:
    get:
      tags:
        - default
      summary: get-status
      description: >-
        Get current worker status. This can be used to verify, the curent status
        of whatsapp login. We need to login to dashboard if curren status is not
        successChat
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{token}}
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: number
                example: nginx/1.22.1
            Date:
              schema:
                type: string
                example: Mon, 04 Mar 2024 10:11:50 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '84'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"54-nUjE+KtmKIU3BFAkXYEc/LGQ0lI"
          content:
            application/json:
              schema:
                type: object
              example:
                error: false
                status: success
                code: 200
                data:
                  sessionStatus: successChat
  /api/v1/venom/create-community:
    post:
      tags:
        - default
      summary: create-community
      description: |-
        This api can be used to create community for the authenticated user.  

        | **field_name** | **data_type** | **description** |
        | --- | --- | --- |
        | community_name | string |  |
        | description | string |  |
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                description: from new aws
                community_name: tufd - 89.x@
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{token}}
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: number
                example: nginx/1.22.1
            Date:
              schema:
                type: string
                example: Mon, 04 Mar 2024 10:12:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '107'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"6b-dYscBBc1FYgSoOQ3Xqjo6U2K9ZE"
          content:
            application/json:
              schema:
                type: object
              example:
                error: false
                status: success
                code: 200
                data:
                  group_name: tufd - 89.x@
                  group_metadata_id: 9126
  /api/v1/venom/all-groups:
    get:
      tags:
        - default
      summary: get all communities
      description: This can be used fetch all the communties created through platform.
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/venom/add-campaign:
    post:
      tags:
        - default
      summary: add-campaign (send now)
      description: >-
        This api is to send campaigns instantly.


        | **field_names** | **description** | **comment** |

        | --- | --- | --- |

        | name | string |  |

        | desc | string |  |

        | html | string |  |

        | image | string | base64 string of media file |

        | group_metadata_ids | number\[\] |  |

        | is_channel_campaign | boolean |  |

        | is_schedule | boolean |  |

        | schedule_time | Datetime |  |


        - **Headings (****`h1`****,** **`h2`****,** **`h3`****,** **`h4`****,**
        **`h5`****,** **`h6`****)** for formatting text as bold in WhatsApp.

        - _Emphasis tags (__**`i`**__,_ _`em`____)_ for italicizing text.

        - **Strong emphasis tags (****`b`****,** **`strong`****)** for bold
        text.

        - Paragraphs (`p`) and line breaks (`br`) for managing text flow and
        spacing.

        - Hyperlinks (`a`) for including clickable links.

        - Lists (`ul` for unordered lists and `ol` for ordered lists) and list
        items (`li`) for formatting lists.

        - `Span` (`span`) for inline text formatting without additional
        styling.  
              
            Please note that the html will be mapped to whatsapp format, this might create some discrepancy in formatting.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: send-now-4
                desc: '1'
                html: <p>send-now-4</p>
                image: null
                group_metadata_ids:
                  - 8
                is_channel_campaign: true
                is_schedule: false
                schedule_time: '2023-12-22 12:18:00'
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/venom/add-campaign-batch:
    post:
      tags:
        - default
      summary: add-campaign (schedule)
      description: |-
        Same as above. Please not the diffence in the fields

        ``` json
        "start_date": "2023-12-22",
        "end_date": "2023-12-22",
        "schedule_time": "12:18:00"
        ```
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: scheduled-camp-5
                desc: '1'
                html: <p>scheduled-camp-5</p>
                image: null
                group_metadata_ids:
                  - 8
                is_channel_campaign: true
                is_schedule: true
                start_date: '2023-12-22'
                end_date: '2023-12-22'
                schedule_time: '12:18:00'
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{token}}
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: number
                example: nginx/1.22.1
            Date:
              schema:
                type: string
                example: Mon, 04 Mar 2024 10:13:07 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '66'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"42-nQ7HKN5PJt/bUSKnsD2x5ijRlak"
          content:
            application/json:
              schema:
                type: object
              example:
                error: false
                status: success
                code: 200
                data:
                  data: true
  /api/v1/venom/get-campaigns:
    get:
      tags:
        - default
      summary: get-campaigns
      description: This api will fetch all the communities available right now.
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/analytics/get-campaign-group-analytics-master:
    post:
      tags:
        - default
      summary: get-campaign-group-analytics
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                campaign_id: 047eb671-8ad6-40a4-b4c3-a665531cb144
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/venom/refresh-community-metadata:
    get:
      tags:
        - default
      summary: refresh-community-metadata
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
